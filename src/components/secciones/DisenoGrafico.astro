---
import LogosInteractivos from '../LogosInteractivos.astro'
import SeparadorMobile from '../SeparadorMobile.astro';
import TituloSeparador from '../TituloSeparador.astro';
---

<section id="serviciosSection" class={`${Astro.props.class} w-screen flex flex-col relative pt-[80px] md:pt-[120px] md:pb-20`}>
    <SeparadorMobile numero="01" class="md:hidden"/>
    <div class="absolute left-0 hidden md:flex h-2 items-center gap-5">
        <span class="bg-white w-28 border-2 left-0"></span>
        <h1 class="text-white font-black text-5xl">01</h1>
        <TituloSeparador primerTexto="DISEÑO" segundoTexto="grafico+" class="md:items-start pt-20"/>
    </div>

    
    <TituloSeparador primerTexto="DISEÑO" segundoTexto="GRAFICO+" class="xs:pt-14 md:hidden"/>

    <div class="md:flex-row flex flex-col items-center md:items-start md:pt-20">
        <div class="flex flex-col items-center md:w-[30%] md:flex md:flex-col">
            <p class="text-white font-light pb-5 xs:text-sm">selecciona el color</p>
            <div id="botones" class="flex justify-evenly gap-5 items-center md:flex-col w-[75%]">
                <div id="picker"></div>
                    <!-- <div class="flex items-center w-full gap-3 justify-center">
                        <span id="botonBlanco" class="border border-[rgba(255,255,255,0.1)] p-[5px] rounded-full w-[40px] h-[40px] md:w-[80px] md:h-[80px] flex items-center justify-center">
                            <button class="rounded-[50%] w-[20px] h-[20px] md:w-[40px] md:h-[40px] self-center bg-white hover:opacity-70 duration-200">
                            </button>
                        </span>
                        <h1 class="text-[#ffffff] font-bold hidden md:flex">#FFFFFF</h1>
                    </div>
                    
                    <div class="flex items-center gap-3 md:order-[-1] w-[100%]">
                        <span id="botonCeleste" class=" border border-[rgba(255,255,255,0.1)] p-[5px] rounded-full w-[50px] h-[50px] flex items-center justify-center md:w-[80px] md:h-[80px]">
                            <button class="rounded-[50%] w-[25px] h-[25px] md:w-[45px] md:h-[45px] bg-[#00f0ff] hover:opacity-70 duration-200">
                            </button>
                        </span>
                        <h1 class="text-[#00f0ff] font-bold hidden md:flex">#00F0FF</h1>
                    </div>
                    <div class="flex items-center w-full md:self-end md:justify-end md:gap-3">
                        <span id="botonGris" class=" border border-[rgba(255,255,255,0.1)] p-[5px] rounded-full w-[40px] h-[40px] flex items-center justify-center md:w-[80px] md:h-[80px]">
                            <button class="rounded-[50%] w-[20px] h-[20px] md:w-[40px] md:h-[40px] bg-[#2F2F2F] hover:bg-[#3f3f3f] duration-200">
                            </button>
                        </span>
                        <h1 class="text-[#3f3f3f] font-bold hidden md:flex">#3F3F3F</h1>
                    </div> -->
                </div>
        </div>
    <LogosInteractivos />
    </div>


    <div class="self-start md:pl-10 flex items-center gap-3 pt-20 md:pt-0">
        <span class="w-3 h-16 bg-[#00f0ff]"></span>
        <p class="max-w-52 text-balance text-sm text-white font-light">diseñamos tu logo, <strong class="font-black">transmiti</strong> los <strong class="font-black">valores</strong> y la <strong class="font-bold">identidad</strong> de tu marca.</p>
    </div>
    
</section>

<style>
    #botonCeleste > button{
        -webkit-box-shadow: 0px 0px 20px 5px rgba(0,240,255,1);
        -moz-box-shadow: 0px 0px 20px 5px rgba(0,240,255,1);
        box-shadow: 0px 0px 20px 5px rgba(0,240,255,1);
    }
    #botonBlanco > button{
        -webkit-box-shadow: 0px 0px 20px 5px rgba(255,255,255,1);
        -moz-box-shadow: 0px 0px 20px 5px rgba(255,255,255,1);
        box-shadow: 0px 0px 20px 5px rgba(255,255,255,1);
    }
    #botonGris > button{
        -webkit-box-shadow: 0px 0px 20px 5px rgba(47,47,47,1);
        -moz-box-shadow: 0px 0px 20px 5px rgba(47,47,47,1);
        box-shadow: 0px 0px 20px 5px rgba(47,47,47,1);
    }
</style>

<script>
    const logoA = document.querySelector('#logoA')
    const isotipoPath = document.querySelector('#isotipo')?.children[0]
    const logo = document.querySelectorAll('path')
    const separadores = document.querySelectorAll('h1')
    const spans = document.querySelectorAll('span')
    const plus = document.querySelectorAll('#plus')
    const comillas = document.querySelector('#comillas')
    const lineas = document.querySelectorAll('hr')
    const atributos = document.querySelectorAll('#atributo')
    const botones = document.querySelectorAll('#botonContacto')
    const seccionCliente = document.querySelector('#clientesSection')
    const logotipo = document.querySelector('#botonLogotipo')
    const isotipo = document.querySelector('#botonIsotipo')
    const navMobile = document.querySelector('#navMobile')
    const ideasInnovadoras = document.querySelector('#ideasInnovadoras')

    let colorPicker = new iro.ColorPicker("#picker", {
        // Set the size of the color picker
        width: 160,
        // Set the initial color to pure red
        color: "#fff",
        borderWidth: 2,
        layout: [
            {
            component: iro.ui.Wheel,
            options: {
                borderColor: '#ffffff'
            }
            },
            {
            component: iro.ui.Slider,
            options: {
                borderColor: '#fff'
            }
            }
        ]
    });

    colorPicker.on('color:change', function(color) {
        let colorElegido = color.hexString
        logoA?.children[0].setAttribute('fill', `${colorElegido}`)
        isotipoPath?.setAttribute('fill', `${colorElegido}`)
        separadores.forEach(element => {
            element.style.color = `${colorElegido}`
        });
        spans.forEach(element => {
            element.style.backgroundColor = `${colorElegido}`
        });
        plus.forEach(element => {
            element.children[0].setAttribute('fill', `${colorElegido}`)
            element.children[1].setAttribute('fill', `${colorElegido}`)
        });
        lineas.forEach(element => {
            element.style.borderColor = `${colorElegido}`
        });

        
        logo.forEach(element => {
            element.setAttribute('fill', `${colorElegido}`)
        });

        atributos.forEach( element => {
            element.style.color = `${colorElegido}`
        })
        botones.forEach( boton => {
            boton.style.backgroundColor = `${colorElegido}`
        })

        navMobile?.setAttribute('style', `background-color:${colorElegido};`)


        comillas?.setAttribute('fill', `${colorElegido}`)
        seccionCliente?.setAttribute('style', `border-top:8px solid ${colorElegido};`)

        if ((logotipo?.classList.contains('logoActivo'))) {
            logotipo.setAttribute('style', `color:${colorElegido};`)
        }
        if ((isotipo?.classList.contains('logoActivo'))) {
            isotipo.setAttribute('style', `color:${colorElegido};`)
        }

        ideasInnovadoras?.setAttribute('style', `color:${colorElegido};`)
        
        

    });
</script>


<script>
    const isotipo = document.querySelector("#isotipo");
    const logotipo = document.querySelector("#logotipo");
    const botonIsotipo = document.querySelector("#botonIsotipo");
    const botonLogotipo = document.querySelector("#botonLogotipo");
    const logo = document.querySelector('h1')
    

    botonLogotipo.addEventListener("click", () => {
        const colorElegido = logo?.getAttribute('style')?.slice(7, -1)
        botonIsotipo?.setAttribute('style', 'color:#fff')
        botonIsotipo.classList.add("text-white");
        botonIsotipo.classList.remove("font-black");
        botonIsotipo?.classList.remove('logoActivo')

        botonLogotipo.classList.remove("text-white");
        botonLogotipo?.classList.add('text-[#00f0ff]')
        botonLogotipo?.setAttribute('style', `color: ${colorElegido};`)
        botonLogotipo.classList.add("font-black");
        botonLogotipo?.classList.add('logoActivo')

        isotipo.classList.remove("flex");
        isotipo.classList.add("hidden");

        logotipo.classList.remove("hidden");
        logotipo.classList.add("flex");
    });

    botonIsotipo.addEventListener("click", () => {
        const colorElegido = logo?.getAttribute('style')?.slice(7, -1)
        console.log(colorElegido)
        botonLogotipo.classList.remove("text-[#00f0ff]");
        botonLogotipo.classList.remove("font-black");
        botonLogotipo?.classList.remove('logoActivo')
        botonLogotipo?.setAttribute('style', 'color:#fff;')

        botonIsotipo.classList.remove("text-white");
        botonIsotipo.classList.add("font-black");
        botonIsotipo?.classList.add('text-[#00f0ff]')
        botonIsotipo?.classList.add('logoActivo')
        botonIsotipo?.setAttribute('style', `color:${colorElegido};`)

        logotipo.classList.remove("flex");
        logotipo.classList.add("hidden");

        isotipo.classList.remove("hidden");
        isotipo.classList.add("flex");
    });

</script>